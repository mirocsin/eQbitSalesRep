function createDataStru() {
    var M = new Migrator(p_db);

    // Version 1
    M.migration(1, function(t) {
        t.executeSql("CREATE TABLE IF NOT EXISTS tblsettings(vchId text,vchUsrnm text,vchPswd text,vchUType text,dtRecordAdded text)");
        t.executeSql("CREATE TABLE IF NOT EXISTS tblappointments(vchAppt_Code text,vchAppt_Add1 text,vchAppt_Add2 text,vchAppt_Add3 text,vchAppt_Cntry text,vchAppt_Zip text,vchAppt_Date text,vchAppt_Time text,vchRemarks text,vchCust_Name text,vchStatus text,dtype text,dtRecordModed text)");        
        t.executeSql("CREATE TABLE IF NOT EXISTS tblcustomers(vchCust_Code text,vchCust_Name text,vchCust_Add1 text,vchCust_Add2 text,vchCust_Add3 text,vchCust_Cntry text,vchCust_Zip text,vchHomePhone text,vchMobilePhone text,vchEmail text,dtype text,dtRecordModed text)");
    });

    // Other version for migration
    //    M.migration(2, function(t){
    //      t.executeSql("alter table foo...");
    //    });

    // Run it
    M.doIt();
}

// created by Max Aller <nanodeath@gmail.com>
function Migrator(db) {
    var migrations = [];
    this.migration = function(number, func) {
        migrations[number] = func;
    };
    var doMigration = function(number) {
        if (migrations[number]) {
            db.changeVersion(db.version, String(number), function(t) {
                migrations[number](t);
            }, function(err) {
                if (console.error)
                    console.error("Error!: %o", err);
            }, function() {
                doMigration(number + 1);
            });
        }
    };
    this.doIt = function() {
        var initialVersion = parseInt(db.version) || 0;
        try {
            doMigration(initialVersion + 1);
        } catch (e) {
            if (console.error)
                console.error(e);
        }
    };
}
